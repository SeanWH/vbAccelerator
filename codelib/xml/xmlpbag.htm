<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="Author" content="Steve McMahon">
<meta name="KeyWords"
content="VB, VB6, Visual Basic, Visual Basic 5, Visual Basic 6, Dynamic HTML, DHTML, IE4, Internet Explorer, Internet Explorer 4, Active X, Active X Controls, Visual Basic Controls">
<meta name="GENERATOR" content="Notepad">
<title>XML PropertyBag</title>
</head>

<body topmargin="0" leftmargin="0" link="#660000" vlink="#999966" LEFTMARGIN="0" TOPMARGIN="0" MARGINHEIGHT="0" MARGINWIDTH="0"  background="..\..\images\legacy.html">

<!-- AD:START -->
<table bgcolor="#336699" border="0" cellpadding="0" cellspacing="0" width="100%" >
<tr>
<td width="468">
<script type="text/javascript"><!--
google_ad_client = "pub-4690375644913255";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<noscript>
<a href="..\..\home\index.html"><img src="..\..\home\res\vbaccelad.png" width="468" height="60" 
border="0" alt="vbAccelerator - Faster VB and .NET Code" /></a>
</noscript>
</td>
<td>
<a href="..\..\home\index.html"><img src="..\..\home\res\vbaccelnew.png" width="125" height="60" 
border="0" alt="The new vbAccelerator Site - more VB and .NET Code and Controls" /></a>
</td>
</tr>
</table>
<!-- AD:END -->


<a name="sectop"></a>

<!-- SECTION:START -->
<!-- SECTION:CODE:START -->
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#660000">
	<td width="100%" height="25">
	<font color="#FFFFFF" face="verdana,arial,helvetica" size="2"><strong>
	<a name="sectop">Source Code</a>
	</strong>
	</font>
	</td>
	<td width="96">
	<font color="#FFFFFF" face="verdana,arial,helvetica" size="2"><strong>
	<a title="Installation Instructions and Requirements" href="..\..\install.htm"><img src="..\..\images\install.gif" height="12" width="96" border="0" valign="center"></a>
	</strong>
	</font>
	</td>
	<td width="96">
	<font color="#FFFFFF" face="verdana,arial,helvetica" size="2"><strong>
	<a title="Back to Source Code" href="..\..\overview.htm"><img src="..\..\images\srccode.gif" height="12" width="96" border="0" valign="center"></a>
	</strong>
	</font>
	</td>
</tr>
</table>
<!-- SECTION:CODE:END -->
<!-- SECTION:END -->

<!-- AREA:START -->
<!-- AREA:INTERNET:START -->
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#996666">
        <td valign="top" width="32">
        <font color="#CC9966" face="verdana,arial,helvetica" size="6"><strong>5</strong></font>
        </td>
        <td valign="center" width="100%">
        <font color="#CC9966" face="verdana,arial,helvetica" size="4"><strong>Internet</strong></font>
        </td>
        <td>&nbsp</td>
</tr>
</table>
<!-- AREA:INTERNET:END -->
<!-- AREA:END -->

<!-- TITLE:START -->
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#EEEEEE">
	<td>
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	<p><b>&nbsp;XML PropertyBag</b></p>
	</font>
	</td>
	<td>&nbsp;</td>
</tr>
</table>
<!-- TITLE:END -->

<!-- SPLASH:START -->
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
	<td>&nbsp;</td>
	<td>
	<font color="#006666" face="verdana,arial,helvetica" size="1">
	<p>Persist and Restore your data in a manageable, reusable and extensible way with XML</p>
	</font>	
	</td>
	<td>&nbsp;</td>
</tr>
</table>
<!-- SPLASH:END -->

<!-- SUPERCEEDED:START -->
<br />
<table border="0" width="100%" cellspacing="0" cellpadding="5">
<tr>
<td width="66" bgcolor="#FFFFFF"><br /></td>
<td width="100%" bgcolor="#EEEEEE">
	<p>
	<font color="#666666" face="verdana,arial,helvetica" size="5">
	<b>&nbsp;NOTE:</b></font>
	<font color="#999999" face="verdana,arial,helvetica" size="2">this code has been superceded by the <a href="..\..\home\vb\code\libraries\persistance\xml_property_bag\article.html" target="_top">version at the new site</a>.
	</font>
	<br />
        </p>
</td>
<td width="66" bgcolor="#FFFFFF"><br /></td>
</tr>
</table>
<br />
<!-- SUPERCEDED:END -->


<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#FFFFFF">
	<td>&nbsp;</td>
	<td>
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	<p><br><img src="..\..\images\xml-msxml.jpg" alt="Using MS XML Parser Technology" width="165" height="133">
	<br><br><br>
	</p>
	</font>
	<p>
	<table border="0" cellspacing="2" cellpadding="2" width="100%">
	<tr>
		<td colspan="2" bgcolor="#99CCFF">
		<font color="#000000" face="verdana,arial,helvetica" size="1">
		<b>Download Code</b>
		</font>
		</td>
	</tr>
	<tr>
	<td><a href="xmlpbag5.zip"><img src="..\..\images\vbdnload.gif" width="16" height="16" border="0" hspace="4"></a></td>
	<td width="100%"><font color="#000000" face="verdana,arial,helvetica" size="2"><a href="xmlpbag5.zip">Download the VB5 XML Property Bag DLL and Demonstration Project (30kb)</a></font></td>
	</tr>
	<tr>
	<td><a href="xmlpbag6.zip"><img src="..\..\images\vbdnld6.gif" width="16" height="16" border="0" hspace="4"></a></td>
	<td width="100%"><font color="#000000" face="verdana,arial,helvetica" size="2"><a href="xmlpbag6.zip">Download the VB6 XML Property Bag DLL and Demonstration Project (30kb)</a></font></td>
	</tr>
	</table>
	<br>
	<table>
	<tr>
		<td>&nbsp</td>
		<td colspan="2" bgcolor="#EEEEEE">
		<font color="#000000" face="verdana,arial,helvetica" size="1">
		<b>Before you Begin</b>
		</font>
		</td>
		<td>&nbsp</td>
	</tr>
	<tr>
		<td>&nbsp</td>
		<td valign="top"><img src="..\..\images\bullet.gif" border="0" hspace="2" width="8" height="8"></td>
		<td valign="top">
		<font color="#000000" face="verdana,arial,helvetica" size="1">
		These projects require Internet Explorer 5 or higher to be installed because 
		they use the Microsoft XML Parser (msxml.dll).  This DLL is also available as a 
		redistributable	for users of Internet Explorer 4.0.  Visit the Microsoft XML site
		for (confusing) information about this.
		</font>
		</td>
		<td>&nbsp</td>
	</tr>
	</table>
	</p>
	</td>
	<td>&nbsp;</td>
	</tr>
</table>

<!-- BODY:START -->
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor>
	<td>&nbsp</td>
	<p>
	<table border="0" cellspacing="2" cellpadding="2" width="100%">
	<tr>
		<td bgcolor="#FFFFFF">
		<font color="#000000" face="verdana,arial,helvetica" size="2">
		<b>Overview</b>
		</font>
		</td>
	</tr>
	<tr>
		<td>
		<font color="#000000" face="verdana,arial,helvetica" size="2">	
		This ActiveX DLL is derived from an excellent original XML PropertyBag sample 
		by Aaron Anderson 
		(<a href="mailto:Aaron.Anderson@mail.farmcreditbank.com">Aaron.Anderson@mail.farmcreditbank.com</a>).
		It allows you to persist and recreate your own objects directly to XML based-files 
		using a	simple interface closely related to VB's <i>PropertyBag</i> object.  By
		implementing one interface in your class you will gain the ablility to save state
		and restore again for any number of objects to and from a single XML file.  
		Full support for binary data means you can store blobs in your XML file too.
		<br><br>
		</td>
	</tr>
	<tr>
		<td bgcolor="#FFFFFF">
		<font color="#000000" face="verdana,arial,helvetica" size="2">
		<b>About XML</b>
		</font>
		</td>
	</tr>
	<tr>
		<td bgcolor="#FFFFFF">
		<font color="#000000" face="verdana,arial,helvetica" size="2">
		The advantages of using XML as a file format for storage in your application 
		cannot be understated. 	XML is plain text.  You can read and write XML files by hand
		(although you might find that a little tedious!) XML is also self-describing.  Just 
		looking at an XML file gives you a good idea what it does and its generally easy 
		to tell how to read the file.  On top of that, XML parsers offer three unique 
		features not often seen before the success of the HTTP protocol: they're almost always
		free, they have a standardised API and they're available for almost any useful computer
		you can think of (except Windows CE.  Hmmm.  Maybe that's not actually a useful 
		computer anyway).
		<br><br>
		Anyway, I'm sure you don't need me to tell you that XML is a good idea.  Visit 
		<a href="javascript:window.alert(&quot;http://www.microsoft.com/xml/\nThis link was not retrieved.&quot;)">Microsoft's XML site</a> for some more ideas
		and examples!
		</font>
		</td>
	</tr>
	<tr>
		<td bgcolor="#FFFFFF">
		<font color="#000000" face="verdana,arial,helvetica" size="2">
		<b>The XMLPropertyBag</b>
		</font>
		</td>
	</tr>
	<tr>
		<td bgcolor="#FFFFFF">
		<font color="#000000" face="verdana,arial,helvetica" size="2">
		The XMLPropertyBag object provided with this article comes in two parts: a implementable
		interface <i>IXMLPropertyBag</i> and a creatable class <i>XMLPropertyBag</i>.  To
		take advantage of the XML Property Bag features, your class should implement the IXMLPropertyBag
		interface.  Doing this effectively adds <i>ReadProperties</i> and <i>WriteProperties</i> 
		events to your object, passing an <i>XMLPropertyBag</i> in as a parameter.  The only
		difference between these events and ones in VB's PropertyBag implementations is that
		they are prefixed with IXMLPropertyBag_ rather than the base object type name 
		(e.g. UserControl_ ).
		<br><br>
		Once you have implemented this interface, to provide XML saving and restoring of values
		can be done in two steps: firstly you write the code in the <i>ReadProperties</i> and <i>WriteProperties</i>
		methods, and then you write code in the object's owner to initialise reading and writing
		of values.
		<br><br>
		Reading and Writing properties is done in almost exactly the same way as with VB's
		<i>PropertyBag</i> object.  The <i>ReadProperty</i> method of the XMLPropertyBag allows
		you to read the value of a named variant in the property bag and the <i>WriteProperty</i>
		method does the opposite.  The following types of variant can be read and written:
		<ul>
		<li>Date.  Dates are stored as strings, so you may wish to convert to a fixed string
		representation if your XML file will be used across locales.  For example, mm/dd/yyyy and
		dd/mm/yyyy are the US and UK representations of the same date and cannot be interchanged.
		<li>Number.  Numbers are stored as strings, so be careful with numbers containing
		decimal points if you expect your XML file to travel between locales.  For example, the
		number 10,6 is valid on a machine with French locale settings but not on a UK machine.
		<li>String - note you can also store strings using byte arrays instead if you want to
		be sure to save String data in a completely platform independent way.  The XMLPropertyBag
		will automatically mark up String sections as XML CDATA if it sees any XML tokens in
		the string.
		<li>Byte Array.  Byte arrays are stored as Base64 encoded data so are guaranteed to 
		be transferred unchanged across any system. The disadvantage to this is that Base64 
		encoding requires 4 bytes in the XML file for every 3 bytes passed in, rounded up to 
		the nearest 4 bytes.
		<li>An object which Implements IXMLPropertyBag.  To do this, you pass in the object
		as the <i>DefaultValue</i> member of the <i>ReadProperties</i> method.  There is no
		default ability for these objects.
		</ul>
		The XMLPropertyBag code will attempt to read/write all other types as a string, but
		if there is no suitable format available you will get an Invalid Variant Type error.
		<br><br>
		Having implemented these methods, you can then save and restore objects into XML.
		In the object's owner, create a new instance of the <i>XMLPropertyBag</i> object.
		If you are saving the object's state, then call the <i>SaveState</i> method on
		the object, passing in the object to save as the first parameter.  You can call
		<i>SaveState</i> on as many objects as you wish - they will be added to the same
		XML Document.  The optional <i>sName</i> parameter allows you to distinguish between 
		multiple objects of the	same type in the same XML file.  When complete, you can then
		get the XML rendering of the objects from the <i>Contents</i> property, which you
		can then save to whatever storage you are persisting the content to.
		<br><br>
		To restore objects from the XML, set the <i>Contents</i> property to the saved XML.
		Then you can call <i>RestoreState</i>, passing in each object you wish to restore (and
		optionally the name if you used that).
		</font>
		</td>
	</tr>
	<tr>
		<td bgcolor="#FFFFFF">
		<font color="#000000" face="verdana,arial,helvetica" size="2">
		<b>Quick Start</b>
		</font>
		</td>
	</tr>
	<tr>
		<td bgcolor="#FFFFFF">
		<font color="#000000" face="verdana,arial,helvetica" size="2">
		This discussion demonstrates how you can add persistance to a simple class called 
		in your	application.  First, assume the class is called cName and has the following
		definition:
		<br><br>
		</font>
<font color="#000000" face="Lucida Console,Courier New" size="1">
&nbsp;&nbsp;&nbsp;Option Explicit<br>
<br>
&nbsp;&nbsp;&nbsp;Private m_sFirstName As String<br>
&nbsp;&nbsp;&nbsp;Private m_sLastName As String<br>
<br>
&nbsp;&nbsp;&nbsp;Public Property Get FirstName() As String<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstName = m_sFirstName<br>
&nbsp;&nbsp;&nbsp;End Property<br>
&nbsp;&nbsp;&nbsp;Public Property Let FirstName(ByVal sName As String)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_sFirstName = sName<br>
&nbsp;&nbsp;&nbsp;End Property<br>
<br>
&nbsp;&nbsp;&nbsp;Public Property Get LastName() As String<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstName = m_sFirstName<br>
&nbsp;&nbsp;&nbsp;End Property<br>
&nbsp;&nbsp;&nbsp;Public Property Let LastName(ByVal sName As String)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_sLastName = sName<br>
&nbsp;&nbsp;&nbsp;End Property<br>
<br>
</font>
<font color="#000000" face="verdana,arial,helvetica" size="2">
	The first step is to implement the IXMLPropertyBag interface.  Add this code to the class:
	<br><br>
</font>
<font color="#000000" face="Lucida Console,Courier New" size="1">
&nbsp;&nbsp;&nbsp;Implements IXMLPropertyBag<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...<br>
<br>
&nbsp;&nbsp;&nbsp;Private Sub IXMLPropertyBag_ReadProperties(ByVal PropertyBag As vbalXMLPBag.XMLPropertyBag)<br>
&nbsp;&nbsp;&nbsp;<font color="#999999" face="Lucida Console,Courier New" size="1">'</font><font color="#000000" face="Lucida Console,Courier New" size="1"><br>
&nbsp;&nbsp;&nbsp;End Sub<br>
<br>
&nbsp;&nbsp;&nbsp;Private Sub IXMLPropertyBag_WriteProperties(ByVal PropertyBag As vbalXMLPBag.XMLPropertyBag)<br>
&nbsp;&nbsp;&nbsp;<font color="#999999" face="Lucida Console,Courier New" size="1">'</font><font color="#000000" face="Lucida Console,Courier New" size="1"><br>
&nbsp;&nbsp;&nbsp;End Sub<br>
<br>
</font>
<font color="#000000" face="verdana,arial,helvetica" size="2">
	Now you can fill in your <i>ReadProperties</i> and <i>WriteProperties</i> implementations:
	<br><br>
<font color="#000000" face="Lucida Console,Courier New" size="1">
&nbsp;&nbsp;&nbsp;Private Sub IXMLPropertyBag_ReadProperties(ByVal PropertyBag As vbalXMLPBag.XMLPropertyBag)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999999" face="Lucida Console,Courier New" size="1">'</font><font color="#000000" face="Lucida Console,Courier New" size="1"><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstName = PropertyBag.ReadProperty(&quot;FirstName&quot;, &quot;&quot;)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LastName = PropertyBag.ReadProperty(&quot;LastName&quot;, &quot;&quot;)<br>
<br>
&nbsp;&nbsp;&nbsp;End Sub<br>
<br>
&nbsp;&nbsp;&nbsp;Private Sub IXMLPropertyBag_WriteProperties(ByVal PropertyBag As vbalXMLPBag.XMLPropertyBag)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999999" face="Lucida Console,Courier New" size="1">'</font><font color="#000000" face="Lucida Console,Courier New" size="1"><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PropertyBag.WriteProperty &quot;FirstName&quot;, FirstName, &quot;&quot;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PropertyBag.WriteProperty &quot;LastName&quot;, LastName, &quot;&quot;<br>
<br>
&nbsp;&nbsp;&nbsp;End Sub<br>
</font>
<font color="#000000" face="verdana,arial,helvetica" size="2">	
	Once that is done, you can now save and restore <i>cName</i> objects at will.  For example,
	this code:
		<br><br>
</font>
<font color="#000000" face="Lucida Console,Courier New" size="1">
&nbsp;&nbsp;&nbsp;Private m_cN As New cName<br>
<br>
&nbsp;&nbsp;&nbsp;Public Function SaveName() As String<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999999" face="Lucida Console,Courier New" size="1">' Create an instance of the XML Property bag object:</font><font color="#000000" face="Lucida Console,Courier New" size="1"><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim oP As New XMLPropertyBag<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999999" face="Lucida Console,Courier New" size="1">' Save cName into the property bag:</font><font color="#000000" face="Lucida Console,Courier New" size="1"><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oP.SaveState m_cN<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999999" face="Lucida Console,Courier New" size="1">' Now the content is saved in the return value:</font><font color="#000000" face="Lucida Console,Courier New" size="1"><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SaveName = oP.Contents<br>
<br>
&nbsp;&nbsp;&nbsp;End Sub<br>
<br>
&nbsp;&nbsp;&nbsp;Public Sub RestoreName(ByVal sXML As String)<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999999" face="Lucida Console,Courier New" size="1">' Create an instance of the XML Property bag object:</font><font color="#000000" face="Lucida Console,Courier New" size="1"><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Dim oP As New XMLPropertyBag<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999999" face="Lucida Console,Courier New" size="1">' Load the XML into it:</font><font color="#000000" face="Lucida Console,Courier New" size="1"><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oP.Contents = sXML<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color="#999999" face="Lucida Console,Courier New" size="1">' Restore the object:</font><font color="#000000" face="Lucida Console,Courier New" size="1"><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;oP.RestoreState m_cN<br>
<br>
&nbsp;&nbsp;&nbsp;End Sub<br>
<br>
</font>
<font color="#000000" face="verdana,arial,helvetica" size="2">
	The download code includes a sample demonstrating how to store a Person object which in turn
	holds a collection of Address objects.  Another example is available in the 
	<a href="..\tarka\findrepl.htm">Search and Replace</a> utility.

		</font>
		</td>
	</tr>
	</table>
	</p>	
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	<br><br><br>
	<p><a href="#sectop"><img src="..\..\images\top.gif" border="0" width="8" height="12" hspace="4" alt="Top"></a>Back to <a href="#sectop">top</a><br>
	<a href="..\..\overview.htm"><img src="..\..\images\sc.gif" border="0" width="8" height="12" hspace="4" alt="Source Code - What We're About!"></a>Back to <a href="..\..\overview.htm">Source Code</a></p>
	</font>
	</td>
	<td>&nbsp</td>
</tr>
</table>	

<!-- BODY:END -->

<!-- FOOTER:START -->
<table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td colspan="2">
        <IMG SRC="..\..\images\grpixel.gif" height="1" width="100%" border="0" ALT="">
        </td>
    </tr>
    <tr>
	<td width="16">&nbsp;</td>
        <td>
	<font size="1" face="Verdana, Arial, Helvetica">
	<p>
	<a href="..\..\mission.htm">About</a>&nbsp;&nbsp;<a 
	href="..\..\contrib.htm">Contribute</a>&nbsp;&nbsp;<a 
	href="mailto:steve@vbaccelerator.com">Send Feedback</a>&nbsp;&nbsp;<a 
	href="..\..\privacy.html">Privacy</a>
	<br><br>
        Copyright &copy; 2000, Steve McMahon (
	<a href="mailto:steve@vbaccelerator.com">steve@vbaccelerator.com</a>). All Rights Reserved.<br>
	Last updated: 21 March 2000</font></p>
        </td>
    </tr>
</table>
<!-- FOOTER:END -->

</body>
</html>
