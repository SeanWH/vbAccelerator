z<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="Author" content="Steve McMahon">
<meta name="KeyWords"
content="VB, VB6, Visual Basic, Visual Basic 5, Visual Basic 6, Dynamic HTML, DHTML, IE4, Internet Explorer, Internet Explorer 4, Active X, Active X Controls, Visual Basic Controls">
<meta name="GENERATOR" content="Notepad">
<title>Saving Pictures to JPG in VB</title>
</head>

<body topmargin="0" leftmargin="0" link="#660000" vlink="#999966" LEFTMARGIN="0" TOPMARGIN="0" MARGINHEIGHT="0" MARGINWIDTH="0"  background="..\..\images\legacy.html">

<!-- AD:START -->
<table bgcolor="#336699" border="0" cellpadding="0" cellspacing="0" width="100%" >
<tr>
<td width="468">
<script type="text/javascript"><!--
google_ad_client = "pub-4690375644913255";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<noscript>
<a href="..\..\home\index.html"><img src="..\..\home\res\vbaccelad.png" width="468" height="60" 
border="0" alt="vbAccelerator - Faster VB and .NET Code" /></a>
</noscript>
</td>
<td>
<a href="..\..\home\index.html"><img src="..\..\home\res\vbaccelnew.png" width="125" height="60" 
border="0" alt="The new vbAccelerator Site - more VB and .NET Code and Controls" /></a>
</td>
</tr>
</table>
<!-- AD:END -->


<a name="sectop">
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#660000">
	<td width="100%" height="25">
	<font color="#FFFFFF" face="verdana,arial,helvetica" size="2"><strong>
	Source Code
	</strong>
	</font>
	</td>
	<td width="96">
	<font color="#FFFFFF" face="verdana,arial,helvetica" size="2"><strong>
	<a title="Installation Instructions and Requirements" href="..\..\install.htm"><img src="..\..\images\install.gif" height="12" width="96" border="0" valign="center"></a>
	</strong>
	</font>
	</td>
	<td width="96">
	<font color="#FFFFFF" face="verdana,arial,helvetica" size="2"><strong>
	<a title="Back to Source Code" href="..\..\overview.htm"><img src="..\..\images\srccode.gif" height="12" width="96" border="0" valign="center"></a>
	</strong>
	</font>
	</td>
</tr>
</table>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#999966">
	<td valign="top"  width="32">
	<font color="#993300" face="verdana,arial,helvetica" size="6"><strong>4</strong></font>
	</td>
	<td>
	<font color="#993300" face="verdana,arial,helvetica" size="4"><strong>vb<I>Media</I></strong></font>
	</td>
	<td>&nbsp</td>
</tr>
</table>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#EEEEEE">
	<td>&nbsp</td>
	<td>
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	<p><b>Saving Pictures to JPG Files from VB</b></p>
	</font>
	</td>
	<td>&nbsp;</td>
</tr>
</table>

<!-- SUPERCEEDED:START -->
<br />
<table border="0" width="100%" cellspacing="0" cellpadding="5">
<tr>
<td width="66" bgcolor="#FFFFFF"><br /></td>
<td width="100%" bgcolor="#EEEEEE">
	<p>
	<font color="#666666" face="verdana,arial,helvetica" size="5">
	<b>&nbsp;NOTE:</b></font>
	<font color="#999999" face="verdana,arial,helvetica" size="2">this code has been superceded by the <a href="..\..\home\vb\code\vbmedia\saving_pictures_to_jpg\using_intel_jpg_library\article.html" target="_top">version at the new site</a>.
	</font>
	<br />
        </p>
</td>
<td width="66" bgcolor="#FFFFFF"><br /></td>
</tr>
</table>
<br />
<!-- SUPERCEDED:END -->


<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
	<td>&nbsp</td>
	<td>
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	<br>
	<p><img src="..\..\images\accl11.jpg" alt="Sample JPG Image" width="296" height="66"></p>
	<p><a href="savejpeg.zip"><img src="..\..\images\vbdnload.gif" width="16" height="16" border="0" hspace="4"><img src="..\..\images\vbdnld6.gif" width="16" height="16" border="0" hspace="4">Download the SaveJPEG Project (including ijl11.dll) (150kb)</a></p>

	<p>
	<table border="0">
	<tr>
		<td width="20">&nbsp;</td>
		<td colspan="2" bgcolor="#EEEEEE">
		<font color="#000000" face="verdana,arial,helvetica" size="1">
		<img src="..\..\images\update.gif" height="11" width="23" border="0" alt="Updated" hspace="2"><b>Updated!</b> <i>21 March 2000</i>
		</font>
		</td>
		<td width="20">&nbsp;</td>
	</tr>
	<tr>
		<td width="20">&nbsp</td>
		<td valign="top"><img src="..\..\images\bullet.gif" border="0" hspace="2" width="8" height="8"></td>
		<td>
		<font color="#000000" face="verdana,arial,helvetica" size="1">
		Intel have now <a href="javascript:window.alert(&quot;http://developer.intel.com/vtune/perflibst/ijl/\nThis link was not retrieved.&quot;)" target="_top">released version 1.1</a> of this 
		library (ijl11.dll) so the sample has been updated to use this version.  There are no 
		functional changes in this version but it is supposedly quicker and includes some minor bug fixes.
		</font>
		</td>
		<td>&nbsp</td>
	</tr>
	<tr>
		<td width="20">&nbsp</td>
		<td valign="top"><img src="..\..\images\bullet.gif" border="0" hspace="2" width="8" height="8"></td>
		<td>
		<font color="#000000" face="verdana,arial,helvetica" size="1">
		Added <i>LoadJPGFromPtr</i> and <i>SaveJPGToPtr</i>.  These methods allow you to load
		and save the JPEG to a byte array or memory block rather than Save to disk.
		</font>
		</td>
		<td>&nbsp</td>
	</tr>
	<tr>
		<td width="20">&nbsp;</td>
		<td colspan="2" bgcolor="#EEEEEE">
		<font color="#000000" face="verdana,arial,helvetica" size="1">
		<img src="..\..\images\update.gif" height="11" width="23" border="0" alt="Updated" hspace="2"><b>Updated!</b> <i>15 August 1999</i>
		</font>
		</td>
		<td width="20">&nbsp;</td>
	</tr>
	<tr>
		<td width="20">&nbsp</td>
		<td valign="top"><img src="..\..\images\bullet.gif" border="0" hspace="2" width="8" height="8"></td>
		<td>
		<font color="#000000" face="verdana,arial,helvetica" size="1">
		The last version of this code corrupted images when asked to load or save files which 
		weren't an even multiple of 4 bytes across (the result was a diagonal distortion).  
		This was because DIB files are padded to 4 byte (i.e. 32 bit) boundaries, but my interface to 
		the JPG library assumed no alignment.  I missed this because (get this !) I tested with only 
		8 images, and <i>all</i> of them were a multiple of 4 in width...
		<br><br>
		It is better now, and I also added some information about the <a href="#secspeed">Performance</a> of
		this library.
		</font>
		</td>
		<td>&nbsp</td>
	</tr>
	<tr>
		<td width="20">&nbsp</td>
		<td valign="top"><img src="..\..\images\bullet.gif" border="0" hspace="2" width="8" height="8"></td>
		<td>
		<font color="#000000" face="verdana,arial,helvetica" size="1">
		The Quality argument has been added to the <i>SaveJPG</i> method, allowing you to specify the
		quality/compression of the saved JPG image.
		</font>
		</td>
		<td>&nbsp</td>
	</tr>
	</table>
	</p>
	<p>
	<b>Introduction</b><br>
	Whilst Visual Basic provides support for loading graphic files in various formats into a StdPicture object, 
	it sadly forgets about all of these when it comes to saving the file again.  You normally only have 
	one choice of file format for writing: a BMP at the system colour depth.
	<br><br>
	Whilst there are various third party controls available to save files in other formats, these are
	often have unacceptable 'per seat' licensing policies and can be incredibly expensive.  This article
	shows how to use a free JPEG DLL library to save VB pictures.
	<br><br>
	<b>JPEG File Format</b><br>
	The JPEG file format is aimed at providing very high compression levels for photographic quality images.
	Before deciding whether you want to use JPEG files in any application you write, there are points to
	consider about how JPEG operates.
	<br><br>
	<MENU>
	<b>Advantages:</b>
	<ul>
	<li> High compression ratio
	<li> Wide support - thanks to the free availability of source code to implement JPG read and write, many
	applications support it.  Windows 98 and 2000 even include native support for reading JPG files.
	<li> No license requirements, unlike <a href="..\..\linxmisc.htm#giflzw">GIF</a>.
	</ul>
	
	<b>Disadvantages:</b>
	<ul>
	<li> The JPEG format is lossy: colour accuracy is affected when you save the file.  Images saved to JPEG 
	many times loose quality in a similar way that multiple generations of analogue recordings do.
	<li> It is difficult to encode - not a task you would like to perform in VB code!
	<li> Works on true colour (24 bit images); not suitable as a format for storing files aimed at paletised systems.
	</ul>	
	</MENU>

	The <a href="..\..\linxref.htm#secijg" target="_top">Independent JPEG Group</a> have done a great deal to make the JPEG 
	format much more accessible to developers by providing free, platform independent C source code to 
	implement JPEG load and save functions.  Their library is used in Internet Explorer <super>*</super>, 
	Netscape <super>*</super> Navigator and countless other projects (some of which have even have the audacity to 
	<i>charge</i> for free code!), including a JPEG Library DLL, <a href="javascript:window.alert(&quot;http://developer.intel.com/vtune/perflibst/ijl/\nThis link was not retrieved.&quot;)" target="_top">ijl11.dll</a>, 
	available from 	the <a href="javascript:window.alert(&quot;http://developer.intel.com/\nThis link was not retrieved.&quot;)" target="_top">Intel<super>*</super> Developer Site</a>. 
	<br><br>
	
	<b>IJL11.DLL</b><br>
	This DLL makes conversion to and from JPG simpler by working on a DIB byte format.  This makes it
	easier to use for Windows programmers than the Independent JPEG Group's C code, since the input and
	output format in memory is a standard Windows format.  Conversion between VB StdPicture objects and
	a DIB is achieved using the <a href="dibsect.htm">cDIBSection Class</a>.
	<br><br>
	<b>From VB</b><br>
	Download the sample project.  This contains all the files required.
	Firstly, unzip Ijl11.zip and place <i>ijl11.dll</i> in your system's path (ideally in the Windows\System directory).  
	Read the licensing agreement included in the zip.  If you are going to use this file for a distributed or
	commercial project you must download a registered copy (free) from Intel at their
	<a href="javascript:window.alert(&quot;http://developer.intel.com/vtune/perflibst/IJL/\nThis link was not retrieved.&quot;)" target="_top">JPEG Library page</a>.
	Then there are two VB files needed:
	<ul>
	<li>mIJL.bas
	<li>cDIBSection.cls
	</ul>
	mIJL.bas contains the declares for ijl11.dll and four wrapper functions:
	<ul>
	<li><i>LoadJPG</i>
	<li><i>LoadJPGFromPtr</i>
	<li><i>SaveJPG</i>
	<li><i>SaveJPGToPtr</i>
	</ul>
	All these function accept an instance of the <i>cDIBSection</i> Class.  The standard versions
	of the functions accept a file name as an argument, while the <i>Ptr</i> versions accept a
	long value pointing to a memory buffer and a variable indicating the buffer size.
	<br><br>
	Although VB can already load a JPG, <i>LoadJPG</i> is provided as it gives a shortcut for loading 
	a JPG file directly into a <i>cDIBSection</i> class without requiring a <i>StdPicture</i> object.
	<i>LoadJPGFromPtr</i> allows you to load a JPG directly from a byte array containing the JPG, a
	function which can't be otherwise be achieved easily in VB.
	<br><br>
	To save a <i>StdPicture</i> object directly, you need to do this:
	<br><br>
	</font>
	<font color="#000000" face="Lucida Console,courier new" size="1">
	Dim c As New cDibSection<br>
	<br>
	</font><font color="#CCCCCC" face="Lucida Console,courier new" size="1">
	&nbsp;&nbsp;&nbsp;' Convert Picture object to DIBSection:<br>
	</font><font color="#000000" face="Lucida Console,courier new" size="1">
	&nbsp;&nbsp;&nbsp;c.CreateFromPicture picThis.Picture<br>
	</font><font color="#CCCCCC" face="Lucida Console,courier new" size="1">
	&nbsp;&nbsp;&nbsp;' Save it:<br>
	</font><font color="#000000" face="Lucida Console,courier new" size="1">
	&nbsp;&nbsp;&nbsp;SaveJPG c, sFileName<br>	
	<br><br>
	</font>	
	<font color="#000000" face="verdana,arial,helvetica" size="2">	
	</p>
	<b>Saving and Loading From Memory Buffers</b><br>
	To Load a JPG from a memory buffer, first you create a byte array containing all the
	bytes in the JPG, or use the <a href="..\imalloc\imalloc.htm">Shell's IMalloc implementation</a>
	to allocate memory directly and have that contain the JPG bytes.  Then you pass the pointer
	to the data and the size of the buffer into the <i>LoadJPGFromPtr</i> method.  If you
	use a byte array, the pointer is obtained using VB's <i>VarPtr</i> function:
	</p>
	</font>	
<font color="#000000" face="Lucida Console,Courier New" size="1">
<font color="#CCCCCC">&nbsp;&nbsp;&nbsp;' Assuming the byte array is b():<br>
<font color="#000000">&nbsp;&nbsp;&nbsp;lPtr = VarPtr(b(0))<br>
	<br><br>
	</font>	
	<font color="#000000" face="verdana,arial,helvetica" size="2">		
	<p>
	To save a JPG to a memory buffer directly, you need to create a byte array or allocate
	sufficient memory to hold the resultant JPG.  Normally this means creating a larger buffer
	than the resulting JPG.  Since JPG always compresses an image, the size is always going
	to be smaller than the size of an equivalent DIB buffer to hold the bytes.  In the sample
	code I chose 1/4 of the bytes in the DIBSection (m_cDib.Height * m_cDib.BytesPerScanLine / 4).
	Then you pass a pointer to this buffer and its size to the <i>SaveJPGFromPtr</i>.  The
	method modifies the size variable passed in to reflect the actual size of the JPG created
	which you can then use to trim down the buffer to size.
	</p>
	<p>
	<a name="secspeed"></a>
	<b>Performance</b><br>
	Interestingly, using cDIBSection with the Intel JPG library can be substantially faster than than using
	VB's standard methods.  The following code was used for benchmarking.  In the VB case, a new <i>StdPicture</i>
	object is created and loaded with a JPG file.  For the IJL library, a new <i>cDIBSection</i> object is
	created and the same JPG file is loaded:
	</p>
<p>
<font color="#000000" face="Lucida Console,Courier New" size="1">
Private Sub cmdIJL_Click()<br>
&nbsp;&nbsp;&nbsp;Dim fT As Double<br>
&nbsp;&nbsp;&nbsp;Dim cD As New cDIBSection<br>
&nbsp;&nbsp;&nbsp;fT = Timer<br>
&nbsp;&nbsp;&nbsp;LoadJPG cD, App.Path & &quot;\earth.jpg&quot;<br>
&nbsp;&nbsp;&nbsp;Debug.Print &quot;Time:&quot;, Timer - fT<br>
End Sub<br>
<br>
Private Sub cmdVB_Click()<br>
&nbsp;&nbsp;&nbsp;Dim fT As Double<br>
&nbsp;&nbsp;&nbsp;Dim picThis As New StdPicture<br>
&nbsp;&nbsp;&nbsp;fT = Timer<br>
&nbsp;&nbsp;&nbsp;Set picThis = LoadPicture(App.Path & &quot;\earth.jpg&quot;)<br>
&nbsp;&nbsp;&nbsp;Debug.Print &quot;Time:&quot;, Timer - fT<br>
End Sub<br>
<br>
</font>
</p>
	<p>
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	The tested file, earth.jpg, was a 1022x747 pixel JPG, with a file size of 66kb.  Performance on the test
	machine (Pentium II 266 with 256Mb memory) showed the IJL library version to be more than twice 
	as quick as the VB version.  Typically, VB turned in a load speed of around 1 second, 
	whilst the IJL version achieved around 0.4s.
	</font>
	</p>
	<p>
	<br><br>

	<p><a href="#sectop"><img src="..\..\images\top.gif" border="0" width="8" height="12" hspace="4" alt="Top"></a>Back to <a href="#sectop">top</a><br>
	<a href="..\..\overmed.htm"><img src="..\..\images\back.gif" border="0" width="8" height="12" hspace="4" alt="Back"></a>Back to <a href="..\..\overmed.htm" target="vbamain">vbMedia Source Code Overview<br>
	<a href="..\..\overview.htm"><img src="..\..\images\sc.gif" border="0" width="8" height="12" hspace="4" alt="Source Code - What We're About!"></a>Back to <a href="..\..\overview.htm" target="vbamain">Source Code Overview</a><br>
	</p>
	</font>
	<br>
	</td>
	<td>&nbsp</td>
</tr>
</table>



<!-- BODY:END -->

<!-- FOOTER:START -->
<table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td colspan="2">
        <IMG SRC="..\..\images\grpixel.gif" height="1" width="100%" border="0" ALT="">
        </td>
    </tr>
    <tr>
	<td width="16">&nbsp;</td>
        <td>
	<font size="1" face="Verdana, Arial, Helvetica">
	<p>
	<a href="..\..\mission.htm">About</a>&nbsp;&nbsp;<a 
	href="..\..\contrib.htm">Contribute</a>&nbsp;&nbsp;<a 
	href="mailto:steve@vbaccelerator.com">Send Feedback</a>&nbsp;&nbsp;<a 
	href="..\..\privacy.html">Privacy</a>
	<br><br>
        Copyright &copy; 1998-2000, Steve McMahon (
	<a href="mailto:steve@vbaccelerator.com">steve@vbaccelerator.com</a>). All Rights Reserved.<br>
	Last updated: 21 March 2000<br><br>
	<super>*</super> All Trademarks acknowledged.</font></p>
        </td>
    </tr>
</table>
<!-- FOOTER:END -->

</body>
</html>
