<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="Author" content="Steve McMahon">
<meta name="KeyWords"
content="VB, VB6, Visual Basic, Visual Basic 5, Visual Basic 6, Dynamic HTML, DHTML, IE4, Internet Explorer, Internet Explorer 4, Active X, Active X Controls, Visual Basic Controls">
<meta name="GENERATOR" content="Notepad">
<title>256 Colour DIBSections</title>
</head>

<body topmargin="0" leftmargin="0" link="#660000" vlink="#999966" LEFTMARGIN="0" TOPMARGIN="0" MARGINHEIGHT="0" MARGINWIDTH="0"  background="..\..\images\legacy.html">

<!-- AD:START -->
<table bgcolor="#336699" border="0" cellpadding="0" cellspacing="0" width="100%" >
<tr>
<td width="468">
<script type="text/javascript"><!--
google_ad_client = "pub-4690375644913255";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<noscript>
<a href="..\..\home\index.html"><img src="..\..\home\res\vbaccelad.png" width="468" height="60" 
border="0" alt="vbAccelerator - Faster VB and .NET Code" /></a>
</noscript>
</td>
<td>
<a href="..\..\home\index.html"><img src="..\..\home\res\vbaccelnew.png" width="125" height="60" 
border="0" alt="The new vbAccelerator Site - more VB and .NET Code and Controls" /></a>
</td>
</tr>
</table>
<!-- AD:END -->



<a name="sectop">
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#660000">
	<td width="100%" height="25">
	<font color="#FFFFFF" face="verdana,arial,helvetica" size="2"><strong>
	Source Code
	</strong>
	</font>
	</td>
	<td width="96">
	<font color="#FFFFFF" face="verdana,arial,helvetica" size="2"><strong>
	<a title="Installation Instructions and Requirements" href="..\..\install.htm"><img src="..\..\images\install.gif" height="12" width="96" border="0" valign="center"></a>
	</strong>
	</font>
	</td>
	<td width="96">
	<font color="#FFFFFF" face="verdana,arial,helvetica" size="2"><strong>
	<a title="Back to Source Code" href="..\..\overview.htm"><img src="..\..\images\srccode.gif" height="12" width="96" border="0" valign="center"></a>
	</strong>
	</font>
	</td>
</tr>
</table>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#999966">
	<td valign="top"  width="32">
	<font color="#993300" face="verdana,arial,helvetica" size="6"><strong>4</strong></font>
	</td>
	<td>
	<font color="#993300" face="verdana,arial,helvetica" size="4"><strong>vb<I>Media</I></strong></font>
	</td>
	<td>&nbsp</td>
</tr>
</table>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#EEEEEE">
	<td>
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	&nbsp;<b>256 Colour DIBSections</b></b>
	</font>
	</td>
</tr>
<tr>
	<td>
	<font color="#999966" face="verdana,arial,helvetica" size="1">
	&nbsp;The fastest way to animate all the pixels using GDI 
	</font>
	</td>	
</tr>
</table>

<!-- SUPERCEEDED:START -->
<br />
<table border="0" width="100%" cellspacing="0" cellpadding="5">
<tr>
<td width="66" bgcolor="#FFFFFF"><br /></td>
<td width="100%" bgcolor="#EEEEEE">
	<p>
	<font color="#666666" face="verdana,arial,helvetica" size="5">
	<b>&nbsp;NOTE:</b></font>
	<font color="#999999" face="verdana,arial,helvetica" size="2">this code has been superceded by the <a href="..\..\home\vb\code\vbmedia\dib_sections\256_colour_dibsection\article.html" target="_top">version at the new site</a>.
	</font>
	<br />
        </p>
</td>
<td width="66" bgcolor="#FFFFFF"><br /></td>
</tr>
</table>
<br />
<!-- SUPERCEDED:END -->


<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#FFFFFF">
	<td>&nbsp</td>
	<td>
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	<br>
	<p>
	<img src="..\..\images\dibs256.gif" alt="Pixel Melt Sample" width="204" height="128">
	</p>
	<p><a href="ds256.zip"><img src="..\..\images\vbdnload.gif" width="16" height="16" border="0" hspace="4">Download the cDIBSection256 class and demonstration (104kb)</a></p>
	<p>
	<table border="0">
	<tr>
		<td width="20">&nbsp;</td>
		<td colspan="2" bgcolor="#EEEEEE">
		<font color="#000000" face="verdana,arial,helvetica" size="1">
		<img src="..\..\images\update.gif" height="11" width="23" border="0" alt="Updated" hspace="2"><b>Updated!</b> <i>5 October 1999</i>
		</font>
		</td>
		<td width="20">&nbsp;</td>
	</tr>
	<tr>
		<td width="20">&nbsp</td>
		<td valign="top"><img src="..\..\images\bullet.gif" border="0" hspace="2" width="8" height="8"></td>
		<td>
		<font color="#000000" face="verdana,arial,helvetica" size="1">
		Added the <i>SavePicture</i> method to natively save to a true 256 colour BMP file, regardless
		of the display resolution. This uses the code developed in
		the <a href="codelib\gfx\octree.htm">Colour Depth</a> sample.
		</font>
		</td>
		<td>&nbsp</td>
	</tr>
	</table>
	</p>

	<p>	
	<b>Introduction</b><br>
	The <a href="imgproc2.htm">Image Processing using DIBSections</a> sample provided on this site
	shows you how to implement a True-Colour DIBSection in VB.  This is great for code which
	needs an effectively unlimited number of colours to perform effectively (such as blurring, 
	sharpening, resampling and so on) but if you are interested in high-performance graphics 
	effects it isn't the quickest way.
	<br><br>
	True-colour images use 3 bytes for every pixel.  To change the colours of a true-colour image
	requires you to modify every single byte in the image in turn.  However, if you can manage
	using only 256 colours in your image then things can work much quicker.  Firstly, there is only
	1 byte per pixel in a 256 colour image, so to process through all the pixels there are 9x less
	bytes to consider.  Secondly, the palette of a 256 colour image is implemented in a separate
	data structure.  If you just want to modify the colours of the image, but not the pixels, you
	can modify the palette information directly - so you only have to access 256x3 bytes.
	<br><br>
	This means graphics code using 256 colour images can run considerably quicker than its true-colour 
	counterpart.  In this article I reimplement some of the colour algorithms using a 256 colour
	version of the DIB Section class.  The performance increase is stunning - for example, to
	perform a fade on a 512x512 image runs 20x quicker on my system, at a ridiculous 200 frames per
	second!
	<br><br>
	<b>In Practice</b><br>
	First I should note that this sample, although it works on 256 colour images, has only been
	coded for systems with more than 256 colour displays.  To get it to work on a 256 colour display
	means you have to implement palette handling, and Visual Basic 5 makes palette modification 
	incredibly difficult. I suppose VB's palette system is aimed at database programmers who
	want to show 256 colour images on 256 colour displays, but that's it really.  Anyone who has
	a nice routine for palette modification, please send it to me!
	<br><br>
	Creating a 256 colour DIBSection is very similar to creating a true colour one - see the article
	<a href="dibsect.htm">Using DIB Sections in VB</a> for more information.  The difference is that
	you need to implement a colour palette in the DIBSection itself and also when loading an Image
	up you need to copy this colour table across.<br><br>
	Here is the alternative version of the <i>BITMAPINFO</i> structure you use for a 256 colour 
	DIBSection:
	</p>
<p>
<font color="#000000" face="Lucida Console,courier new" size="1">
Private Type BITMAPINFO <br>
&nbsp &nbsp bmiHeader As BITMAPINFOHEADER <br>
&nbsp &nbsp bmiColors(0 to 255) As RGBQUAD <br>
End Type <br>
 <br>
</font>
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	<p>	
	To copy the colour information across, you can take advantage of the <i>GetDIBColorTable</i> and
	<i>SetDIBColorTable</i> API calls to set the entire colour table in one call.  Since Pictures
	in VB are stored as DIBs, you can call this method directly on any VB Picture object which is selected
	into a DC.  Here is how a StdPicture object is copied across to a 256 colour DIBSection:
	</p>
<p>
<font color="#999999" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;' Get the Desktop DC - this allows us to create a compatible device context<br>
&nbsp;&nbsp;&nbsp;' to select the StdPicture's bitmap into:<br></font><font color="#000000" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;lhDCDesktop = CreateDCAsNull("DISPLAY", ByVal 0&, ByVal 0&, ByVal 0&)<br>
&nbsp;&nbsp;&nbsp;If (lhDCDesktop <> 0) Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lHDC = CreateCompatibleDC(lhDCDesktop)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DeleteDC lhDCDesktop<br>
<br></font><font color="#999999" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' If we get the compatible DC:<br></font><font color="#000000" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If (lHDC <> 0) Then<br>
<br></font><font color="#999999" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Select the bitmap into the compatible DC:<br></font><font color="#000000" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lhBmpOld = SelectObject(lHDC, picThis.handle)<br>
<br></font><font color="#999999" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Now get the StdPicture's DIB Color Table:<br></font><font color="#000000" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lC = GetDIBColorTable(lHDC, 0, 256, tRGB(0))<br>
<br></font><font color="#999999" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' if this assert fails, the picture you're creating from<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' is not 256 colours:<br></font><font color="#000000" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Debug.Assert (lC = 256)
<br></font><font color="#999999" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Here we copy the bits from the bitmap directly into the DIBSection memory:<br></font><font color="#000000" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GetDIBits256 lHDC, picThis.handle, 0, tBMP.bmHeight, ByVal m_lPtr, m_tBI, DIB_RGB_COLORS<br>
<br></font><font color="#999999" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Set the colour table to correct values:<br></font><font color="#000000" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If (lC > 0) Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetDIBColorTable m_hDC, 0, 256, tRGB(0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End If<br>
<br></font><font color="#999999" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' clear up:<br></font><font color="#000000" face="Lucida Console,courier new" size="1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SelectObject lHDC, lhBmpOld<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DeleteObject lHDC<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End If<br>
&nbsp;&nbsp;&nbsp;End If<br>
</font>
	</p>
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	<p>	
	The <i>GetDIBColorTable</i> and <i>SetDIBColorTable</i> calls make it easy to programmatically
	manipulate the colours in a DIB at very high speed.  For example, here is loop which will
	cycle through all the colours in the palette of a 256 colour DIB:
	</p>
<p>
<font color="#000000" face="Lucida Console,courier new" size="1">
Static tRGBSwap As RGBQUAD<br>
Static tRGB(0 To 255) As RGBQUAD<br>
Static i As Long<br>
Static lC As Long<br>
Static bGo As Boolean<br>
<br>
&nbsp;&nbsp;&nbsp;Do While bGo<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lC = GetDIBColorTable(hdc, 0, 256, tRGB(0))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If lC = 256 Then<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LSet tRGBSwap = tRGB(0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For i = 1 To 255<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LSet tRGB(i - 1) = tRGB(i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next i<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tRGB(255) = tRGBSwap<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SetDIBColorTable m_cDibIn.hdc, 0, 256, tRGB(0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m_cDibIn.PaintPicture Me.hdc, 96, 32<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End If<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DoEvents<br>
&nbsp;&nbsp;&nbsp;Loop
</font>
	</p>
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	<p>	
	The source code provided with this project provides the full implementation of the
	cDibSection256 class, along with demonstrations of colour modification functions
	(fade, brighten, darken, invert, gray-scale and cycle) and pixel manipulation (the
	sample is called Pixel Melt and moves all pixels in the GIF in a random direction
	depending on its palette entry.)	
	</p>

	<p><a href="#sectop"><img src="..\..\images\top.gif" border="0" width="8" height="12" hspace="4" alt="Top"></a>Back to <a href="#sectop">top</a><br>
	<a href="..\..\overview.htm"><img src="..\..\images\sc.gif" border="0" width="8" height="12" hspace="4" alt="Source Code - What We're About!"></a>Back to <a href="..\..\overview.htm" target="vbamain">Source Code Overview</a>
	</p>

	</font>


	</td>
	<td>&nbsp</td>
</tr>
</table>


<!-- BODY:END -->

<!-- FOOTER:START -->
<table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td colspan="2">
        <IMG SRC="..\..\images\grpixel.gif" height="1" width="100%" border="0" ALT="">
        </td>
    </tr>
    <tr>
	<td width="16">&nbsp;</td>
        <td>
	<font size="1" face="Verdana, Arial, Helvetica">
	<p>
	<a href="..\..\mission.htm">About</a>&nbsp;&nbsp;<a 
	href="..\..\contrib.htm">Contribute</a>&nbsp;&nbsp;<a 
	href="mailto:steve@vbaccelerator.com">Send Feedback</a>&nbsp;&nbsp;<a 
	href="..\..\privacy.html">Privacy</a>
	<br><br>
        Copyright &copy; 1998-1999, Steve McMahon (
	<a href="mailto:steve@vbaccelerator.com">steve@vbaccelerator.com</a>). All Rights Reserved.<br>
	Last updated: 5 October 1999.
	&nbsp;&nbsp;First Published: 17 February 1999.	
	</font></p>
        </td>
    </tr>
</table>
<!-- FOOTER:END -->

</body>
</html>
