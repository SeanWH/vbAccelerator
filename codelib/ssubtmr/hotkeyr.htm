<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=iso-8859-1">
<meta name="Author" content="Steve McMahon">
<meta name="KeyWords"
content="VB, VB6, Visual Basic, Visual Basic 5, Visual Basic 6, Dynamic HTML, DHTML, IE4, Internet Explorer, Internet Explorer 4, Active X, Active X Controls, Visual Basic Controls">
<meta name="GENERATOR" content="Notepad">
<title>Creating and Responding to Hotkeys</title>
</head>


<body topmargin="0" leftmargin="0" link="#660000" vlink="#999966" LEFTMARGIN="0" TOPMARGIN="0" MARGINHEIGHT="0" MARGINWIDTH="0"  background="..\..\images\legacy.html">

<!-- AD:START -->
<table bgcolor="#336699" border="0" cellpadding="0" cellspacing="0" width="100%" >
<tr>
<td width="468">
<script type="text/javascript"><!--
google_ad_client = "pub-4690375644913255";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
//--></script>
<script type="text/javascript"
  src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
<noscript>
<a href="..\..\home\index.html"><img src="..\..\home\res\vbaccelad.png" width="468" height="60" 
border="0" alt="vbAccelerator - Faster VB and .NET Code" /></a>
</noscript>
</td>
<td>
<a href="..\..\home\index.html"><img src="..\..\home\res\vbaccelnew.png" width="125" height="60" 
border="0" alt="The new vbAccelerator Site - more VB and .NET Code and Controls" /></a>
</td>
</tr>
</table>
<!-- AD:END -->



<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#660000">
        <td width="100%" height="25">
        <font color="#FFFFFF" face="verdana,arial,helvetica" size="2"><strong>
        <a name="sectop"></a>Source Code
        </strong>
        </font>
        </td>
        <td width="96">
        <font color="#FFFFFF" face="verdana,arial,helvetica" size="2"><strong>
        <a title="Installation Instructions and Requirements" href="..\..\install.htm"><img src="..\..\images\install.gif" height="12" width="96" border="0" valign="center"></a>
        </strong>
        </font>
        </td>
        <td width="96">
        <font color="#FFFFFF" face="verdana,arial,helvetica" size="2"><strong>
        <a title="Back to Source Code" href="..\..\overview.htm"><img src="..\..\images\srccode.gif" height="12" width="96" border="0" valign="center"></a>
        </strong>
        </font>
        </td>
</tr>
</table>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#6699CC">
        <td valign="top" width="32">
        <font color="#660000" face="verdana,arial,helvetica" size="6"><strong>3</strong></font>
        </td>
        <td>
        <font color="#660000" face="verdana,arial,helvetica" size="4"><strong>Code Libraries</strong></font>
        <font color="#660000" face="verdana,arial,helvetica" size="2">
        </font>
        </td>
        <td width="10">&nbsp</td>
</tr>
</table>

<!-- SUPERCEEDED:START -->
<br />
<table border="0" width="100%" cellspacing="0" cellpadding="5">
<tr>
<td width="66" bgcolor="#FFFFFF"><br /></td>
<td width="100%" bgcolor="#EEEEEE">
	<p>
	<font color="#666666" face="verdana,arial,helvetica" size="5">
	<b>&nbsp;NOTE:</b></font>
	<font color="#999999" face="verdana,arial,helvetica" size="2">this code has been superceded by the <a href="..\..\home\vb\code\libraries\subclassing\registered_hotkeys\article.html" target="_top">version at the new site</a>.
	</font>
	<br />
        </p>
</td>
<td width="66" bgcolor="#FFFFFF"><br /></td>
</tr>
</table>
<br />
<!-- SUPERCEDED:END -->

<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr bgcolor="#FFFFFF">
        <td>&nbsp</td>
        <td>
        <font color="#000000" face="verdana,arial,helvetica" size="2">
        <br>
        <p><b>Creating and Responding to Hotkeys</b><br></p>
        <p><img src="..\..\images\hotkeyr.gif" width="168" height="150" alt="Very Simple MouseLeave Demonstration" border="0"></p>
        <p><a href="rhotkey.zip"><img src="..\..\images\vbdnload.gif" width="16" height="16" border="0" hspace="4">Download the RetHotKey class and basic sample (21kb)</a></p>
        <p><a href="rhkeyd2.zip"><img src="..\..\images\vbdnload.gif" width="16" height="16" border="0" hspace="4">Download the (very foolish) demonstration project (35kb)</a></p>
        </font>
        <p>
        <table cellspacing="0" cellpadding="0" border="0">
        <tr>
                <td>&nbsp</td>
                <td colspan="2" bgcolor="#EEEEEE">
                <font color="#000000" face="verdana,arial,helvetica" size="1">
                <b>Before you Begin</b>
                </font>
                </td>
                <td>&nbsp</td>
        </tr>
        <tr>
                <td>&nbsp</td>
                <td valign="top"><img src="..\..\images\bullet.gif" border="0" hspace="2" width="8" height="8"></td>
                <td valign="top">
                <font color="#000000" face="verdana,arial,helvetica" size="1">
                This project requires the <a href="ssubtmr.htm">SSubTmr.DLL component</a>.  Make sure you have loaded and registered this before trying the project.
                </font>
                </td>
                <td>&nbsp</td>
        </tr>
        </table>
        </p>
        <font color="#000000" face="verdana,arial,helvetica" size="2">
        <p>
	<b>Introduction</b><br>
	Win32 allows you to set up combinations of key-presses which can be associated with an
	application on a system-wide scope, called Hotkeys.  When a user
	presses a registered HotKey it doesn't matter which application is active when they
	pressed it, the hot-key	message will get routed to your application.<br><br>
	There are two types of HotKeys:
	<ol>
	<li><b>Application activation HotKeys</b><br>
	These are the simplest type.  When the HotKey is selected your application is activated.  They 
	are very simple to set up but they only activate your application - you can't determine if this
	was due to the HotKey being pressed nor take any other action.
	<li><b>Registered HotKeys</b><br>
	This type of HotKey sends a <i>WM_HOTKEY</i> message to your application when the HotKey is pressed.
	so you can choose how to respond to the key.  Setting up this type is slightly more complex
	and you have to subclass your application's form to intercept the HotKey messages.
	</ol>
	This article describes how to create and respond to the second type, Registered HotKeys.  If you want to 
	create a simple activation HotKey, this information is described in the 
	<a href="..\comctl\hotkey.htm">HotKey Control</a> sample.  This also provides an implementation
	of the Common Controls HotKey control which you can use in an application to make it easier for
	a user to set-up HotKeys.
	<br><br>
	<b>Registering a HotKey</b><br>
	Registering a system-wide HotKey is achieved in two steps:
	<ol>
	<li>Creating a globally unique identifier for the HotKey.  You do this using the
	Win32 Global Atom database.  
	<li>Registering the HotKey itself.
	</ol>
	<b>1. The Win32 Atom Databases</b><br>
	Win32 Atom databases store a list of unique strings which are internally identified by an 16 bit integer ID.  
	The Global Atom database creates string lists which are accessible to all processes.  In addition
	to this each process on the system can have its own Local Atom database.
	These functions could be quite useful for other VB purposes - if you need to store a list of
	unique strings and IDs in an application, you could take advantage of the Atom database to do
	it.  However, as there is only one atom database per process you would have to be careful!  Note that
	an applications process includes both the executable and any OCXs or DLLs being used in that executable.
	<br><br>
	The Global Atom database functions in Win32 are <i>GlobalAddAtom</i>, <i>GlobalDeleteAtom</i>, <i>GlobalFindAtom</i>
	and <i>GlobalGetAtomName</i>.  The first step of registering a HotKey is to create a string that is unlikely
	to be in use by any other application on the system and then get an ID for it by calling <i>GlobalAddAtom</i>
	for that string.  In the class supplied with the demonstration project the string is created by specifying a 
	local key string to which the executable name and the current <i>GetTickCount</i> value are appended.
	<br><br>
	<b>2. Registering the HotKey</b><br>
	Registering the key itself is acheived using Win32's unusually sensibly named <i>RegisterHotKey</i>
	function. This takes the window handle you want to send the messages to, the globally unique
	identifier you created using the Global Atom database, a bit flag containing the Shift, Ctrl,
	Alt or Windows Key keys which have to be pressed for the HotKey and the Virtual Key Code of the
	key you want to register.   Note that in VB the <i>VBRUN</i> library enumeration 
	<i>KeyCodeConstants</i> corresponds directly to the Win32 Virtual Key Code constants.  These
	are the key values that are passed to you in the <i>KeyUp</i> and <i>KeyDown</i> events.
	<br><br>	
	<b>Responding to HotKeys</b><br>
	Once you've set up a HotKey, you can respond to it by subclassing the <i>WM_HOTKEY</i>
	message sent to the window.  The <i>wParam</i> of the <i>WM_HOTKEY</i> message contains the 
	globally unique identifier you assigned to the HotKey, and the <i>lParam</i> contains the
	virtual key code in the HiWord and the key modifiers in the LoWord.<br><br>
	</p>
	</font>
	<p><table width = "100%" border="0" cellspacing="0" cellpadding="0">
	<tr>
	<td valign="top"><img src="..\..\images\minitip.gif" width="10" height="14" hspace="10"></td>
	<td bgcolor="#99CCFF"><font color="#000099" face="verdana,arial,helvetica" size="2">
	<b>Tip</b> Extract HiWords and LoWords from a Long value<br>
	</font>
	</td>
	<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
	</tr>
	<tr>
	<td></td>
	<td>
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	This is easy to do using the And operator and emulating a Right Shift by dividing:<br><br>
	</font>
	<font color="#000000" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;LoWord = (Value And &HFFFF&) <br>
	&nbsp;&nbsp;HiWord = (Value \ &H10000) And &HFFFF& <br>
	<br>
	</font><font color="#000000" face="verdana,arial,helvetica" size="2">
	There is a problem with this techique you have to be aware of if the HiWord of the Value
	has its highest bit set. In VB, there is no way of defining an Long variable as &quot;Unsigned&quot;, 
	so the	high bit of a Long is used to identify whether the number is positive or negative.  
	If the Value has the high bit set, then the result of the HiWord comparison above will be wrong
	(for example, if Value was &HFFFFFFFF, which VB interprets as -1, then the HiWord method above
	will yield 0!).  To work around this problem, rewrite HiWord like this:<br><br>
	</font><font color="#CCCCCC" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;' Check for high bit (sign flag):<br></font><font color="#000000" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;If (Value And &H80000000) = &H80000000 Then<br></font><font color="#CCCCCC" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;' Strip it out whilst shifting then add it back in again afterwards:<br></font><font color="#000000" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;&nbsp;&nbsp;HiWord = (((Value And &H7FFFFFFF)\&H10000) Or &H8000) And &HFFFF&<br>
	&nbsp;&nbsp;Else<br></font><font color="#CCCCCC" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;' Standard shift method:<br></font><font color="#000000" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;&nbsp;&nbsp;HiWord = (Value \ &H10000) And &HFFFF&<br>
	&nbsp;&nbsp;End If<br>
	</font>
	</td>
	<td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
	</tr>
	</table>
	</p>
	<p>	
	<font color="#000000" face="verdana,arial,helvetica" size="2">
	<b>In Use</b><br>
	The cRegHotKey class supplied in the download wraps up all of this functionality into a simple 
	class which you can drop into a project.  Using the class you do this:
	<ol>
	<li>Declare a WithEvents instance of the class in your project:<br><br>
	</font><font color="#000000" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;&nbsp;Private WithEvents m_cHK As cRegHotKey<br><br>
	</font><font color="#000000" face="verdana,arial,helvetica" size="2">
	<li>Create an instance of the class and tell it your form's window handle:<br><br>
	</font><font color="#000000" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;&nbsp;Set m_cHK = New cRegHotKey><br>
	&nbsp;&nbsp;&nbsp;m_cHK.Attach Me.hwnd<br><br>
	</font><font color="#000000" face="verdana,arial,helvetica" size="2">
	<li>Add a HotKey (or as many as you like!):<br><br>
	</font><font color="#CCCCCC" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;&nbsp;' This registers CTRL-ALT-C as "MyHotKey"	<br>
	</font><font color="#000000" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;&nbsp;m_cHK.RegisterKey "MyHotKey", vbKeyC, MOD_CONTROL Or MOD_ALT<br><br>
	</font><font color="#000000" face="verdana,arial,helvetica" size="2">
	<li>Respond to the keypress throught <i>HotKeyPress</i> event<br><br>
	</font><font color="#000000" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;&nbsp;Private Sub m_cHK_HotKeyPress(ByVal sName As String, _<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ByVal eModifiers As EHKModifiers, _<br>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ByVal eKey As KeyCodeConstants _<br>
	&nbsp;&nbsp;&nbsp;)<br>
   	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If (sName = "MyHotKey") Then<br>
	</font><font color="#CCCCCC" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' Do your processing here!<br>
	</font><font color="#000000" face="Lucida Console,Courier New" size="1">
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End If<br>
	<br>
	&nbsp;&nbsp;&nbsp;End Sub<br><br>
	</ol>
	</font><font color="#000000" face="verdana,arial,helvetica" size="2">
	The alternative download implements a couple of entirely pointless uses of the class.  Firstly
	CTRL-ALT-C will start and stop a small earthquake on your system.  Secondly, CTRL-ALT-X will
	attempt to kill with prejustice any instances of the supremely smug Microsoft Assistant thingy
	it finds on the screen.	  On a more useful note, it also demonstrates using the <a href="..\comctl\hotkey.htm">HotKey control</a>
	to set up the keys on the screen (this control is included compiled into the source code).
	</p>
	</font>
<p>
<font color="#000000" face="verdana,arial,helvetica" size="2">
	
        <br><br>

        <p><a href="#sectop"><img src="..\..\images\top.gif" border="0" width="8" height="12" hspace="4" alt="Top"></a>Back to <a href="#sectop">top</a><br>
	<a href="..\..\overview.htm"><img src="..\..\images\sc.gif" border="0" width="8" height="12" hspace="4" alt="Source Code - What We're About!"></a>Back to <a href="..\..\overview.htm">Source Code</a></p>

        </font>


        </td>
        <td>&nbsp</td>
</tr>
</table>

<!-- BODY:END -->

<!-- FOOTER:START -->
<table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td colspan="2">
        <IMG SRC="..\..\images\grpixel.gif" height="1" width="100%" border="0" ALT="">
        </td>
    </tr>
    <tr>
	<td width="16">&nbsp;</td>
        <td>
	<font size="1" face="Verdana, Arial, Helvetica">
	<p>
	<a href="..\..\mission.htm">About</a>&nbsp;&nbsp;<a 
	href="..\..\contrib.htm">Contribute</a>&nbsp;&nbsp;<a 
	href="mailto:steve@vbaccelerator.com">Send Feedback</a>&nbsp;&nbsp;<a 
	href="..\..\privacy.html">Privacy</a>
	<br><br>
        Copyright &copy; 1998-1999, Steve McMahon (
	<a href="mailto:steve@vbaccelerator.com">steve@vbaccelerator.com</a>). All Rights Reserved.<br>
	Last updated: 27 January 1999</font></p>
        </td>
    </tr>
</table>
<!-- FOOTER:END -->

</body>
</html>
